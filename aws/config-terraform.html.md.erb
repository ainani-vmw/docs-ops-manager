---
title: Configuring BOSH Director on AWS using Terraform
owner: Ops Manager
iaas: AWS
install_type: terraform
---

You can configure the BOSH Director tile in <%= vars.ops_manager_first %> on
Amazon Web Services (AWS) after [Deploying <%= vars.ops_manager %> on AWS using
Terraform](prepare-env-terraform.html).

<%= partial "/pcf/warning-terraform" %>

<p> You can also follow the procedures in this topic using the <%= vars.ops_manager %> API.
For more information, see <a href="../install/ops-man-api.html">Using the <%= vars.ops_manager %> API</a>.</p>

## <a id='prereq'></a> Prerequisites

To follow the procedures in this topic, you must have access to the output from when you ran `terraform apply` to create resources for this deployment. You can view this output at any time by running `terraform output`. Use the values in your Terraform output to configure the BOSH Director tile.

## <a id='access-om'></a> Step 1: Log in to <%= vars.ops_manager %>

1. In a web browser, go to the fully qualified domain name (FQDN) of <%= vars.ops_manager %>. Use the `ops_manager_dns` value from running `terraform output`.

1. Log into <%= vars.ops_manager %>. To log in, see [Log In to <%= vars.ops_manager %> For the First Time](../login.html#login-first-time).

## <a id='aws-config'></a> Step 2: AWS config page

1. Click the **BOSH Director** tile.

1. Click **AWS Config** to open the **AWS Management Console Config** page.

    ![alt-text="The AWS Management Console Config pane. See the following steps for more information."](../common/images/cloudform/aws-config.png)

2. Click **Use AWS Keys** or **Use AWS Instance Profile**.
    * If you choose to use AWS keys, complete the following text boxes:
        * **Access Key ID**: Enter the value of `ops_manager_iam_user_access_key` from the Terraform output.
        * **AWS Secret Key**: Enter the value of `ops_manager_iam_user_secret_key` from the Terraform output.
    * If you choose to use an AWS instance profile, enter the name of your AWS Identity and Access Management (IAM) profile or enter the value of `ops_manager_iam_instance_profile_name` from the Terraform output.

3. Complete the remainder of the **AWS Management Console Config** page with the following information.
    * **Security Group ID**: Enter the value of `vms_security_group_id` from the Terraform output.
    * **Key Pair Name**: Enter the value of `ops_manager_ssh_public_key_name` from the Terraform output.
    * **SSH Private Key**: Run `terraform output` to view the value of `ops_manager_ssh_private_key` and
    enter it into this text box. The `ops_manager_ssh_private_key` value
    is a `sensitive` value and does not
    display when you run `terraform apply`.
    * **Region**: Enter the AWS region where you deployed <%= vars.ops_manager %>.
    * **AWS EBS disk type**: Select the type of EBS volume for BOSH-deployed VMs to use.

      <p> If you change this value, BOSH recreates all VMs when you apply changes.</p>
    Encrypt Linux EBS Volumes: Select this check box to enable full encryption
      on persistent disks of all BOSH-deployed VMs, except
      for the <%= vars.ops_manager %> VM and BOSH Director VM. For more information about using Elastic Block Store (EBS) encryption, see [Configuring Amazon EBS Encryption](../install/cloudform-om-ebs-config.html).
      <p> Enabling EBS encryption only encrypts Linux VMs. The Windows VMs deployed with <%= vars.windows_runtime_first %> are not encrypted.</p>
      Custom Encryption Key (Optional): After you enable EBS encryption, you might want to specify a custom Key Management Service (KMS) encryption key.
      If you don't enter a value, by default your custom encryption key is usually better than the account key.
      For more information, see [Configuring Amazon EBS Encryption](../install/cloudform-om-ebs-config.html).

4. Click **Save**.

## <a id='director-config'></a> Step 3: Director config page

<%= partial "../common/director-config" %>
<p> For more information about Amazon S3 Signatures, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating Requests</a>.</p>

## <a id='az'></a> Step 4: Create Availability Zones page

1. Click **Create Availability Zones**.

    ![alt-text="The Create Availability Zones pane. See the following steps for more information."](../common/images/cloudform/create-az.png)

2. To create three availability zones for your apps to use:
    1. Click **Add** three times.
    2. For **Amazon Availability Zone**, enter the values corresponding to the key `infrastructure_subnet_availability_zones` from the Terraform output.
    3. Click **Save**.

## <a id='network'></a> Step 5: Create Networks page

1. Click **Create Networks**.

    ![alt-text="The Create Networks pane. See the following steps for more information."](../common/images/cloudform/create-networks.png)

1. (Optional) Click **Enable ICMP checks** to enable ICMP on your networks. <%= vars.ops_manager %> uses ICMP checks to confirm that components within your network are reachable.

2. To add the network configuration you created for your VPC:
1. Click **Add Network**.
2. For **Name**, enter `infrastructure`.
3. Create a subnet for each availability zone by clicking **Add Subnet**.

See the following table for the information required to create all three subnets:

    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.0/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.0-10.0.16.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.16/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.16-10.0.16.20</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.17</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.32/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.32-10.0.16.36</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.33</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.

  <br><br>

  1. Click **Add Network**.
  2. For **Name**, enter the name of your runtime. For example, `pas` or `pks`.
  3. Create a subnet for each availability zone (AZ) by clicking **Add Subnet**. See the following table for the information required to create all three subnets:

  <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>RUNTIME_subnet_ids</code> from the Terraform output, where <code>RUNTIME</code> is either <code>pas</code> or <code>pks</code>.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.4.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.4.0-10.0.4.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.4.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>RUNTIME_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.5.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.5.0-10.0.5.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.5.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>RUNTIME_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.6.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.6.0-10.0.6.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.6.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.
  <br><br>

  1. Click **Add Network**.
  2. For **Name**, enter `services`.
  3. Create a subnet for each availability zone (AZ) by clicking **Add Subnet**. See the following table for the information required to create all three subnets:

  <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.8.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.8.0-10.0.8.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.8.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.9.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.9.0-10.0.9.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.9.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.10.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.10.0-10.0.10.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.10.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.

4. Click **Save**.

    <p> If you are deploying <%= vars.k8s_runtime_abbr %> with a <%= vars.k8s_runtime_abbr %> workload load balancer, you must tag each AWS subnet with your <%= vars.k8s_runtime_abbr %> Kubernetes cluster unique
    identifier before you create the load balancer. For more information about tagging subnets with a <%= vars.k8s_runtime_abbr %> cluster unique identifier, see <a href="https://docs.pivotal.io/tkgi/deploy-workloads.html#aws">AWS Prerequisites</a>.</p>

    <%= vars.expand_network_azs %>

## <a id='assign-azs'></a> Step 6: Assign AZs and Networks page

1. Click **Assign AZs and Networks**.

    ![alt-text="The Assign AZs and Networks pane. See the following steps for information about the details."](../common/images/assign-az.png)

1. Use the **Singleton Availability Zone** drop-down menu to select an AZ . The BOSH Director installs in this availability zone (AZ).

2. Use the **Network** drop-down menu to select the `infrastructure` network for your BOSH Director.

3. Click **Save**.

## <a id='security'></a> Step 7: Security page

<%= partial "../common/security-pane" %>

## <a id='bosh-dns'></a> Step 8: BOSH DNS config page

<%= partial '../common/bosh-dns-config'  %>

## <a id='syslog'></a> Step 9: Syslog page

<%= partial "/pcf/ops-manager/syslog_bosh", :locals => { :syslog_context => 'BOSH Director' } %>

## <a id='pcfaws-om-rscestem'></a> Step 10: Resource config page

1. Click **Resource Config**.

    ![alt-text="The Resource Config pane. See the following steps for detailed information."](../common/images/cloudform/resource-config.png)

1. Under the **Instances**, **VM Type**, and **Persistent Disk Type** text boxes, click **Automatic** from the drop-down menu to allocate the recommended resources for the job. If the **Persistent Disk Type** text box reads **None**, the job does not require persistent disk space.
    <p> For the BOSH Director job, select a VM type with at least 8&nbsp;GB memory.</p>

    <p> If you set a text box to <strong>Automatic</strong> and the recommended resource allocation changes in a future version, <%= vars.ops_manager %> automatically uses the new recommended allocation.</p>
    <p> If you install <%= vars.windows_runtime_abbr %>, provision your <strong>Main Compilation Job</strong> with at least 100&nbsp;GB of disk space.</p>

2. (Optional) To configure an Application Load Balancer (ALB) for your BOSH Director, click the icon next to the **BOSH Director** job name to see more text boxes.

    Enter your AWS target group name in the **Load Balancers** text box for the **BOSH Director** job. Prepend the name with `alb:`.
    For example, enter `alb:target-group-name`.<br><br>
    To create an ALB and target group, follow the procedures in [Getting Started with Application Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancer-getting-started.html) in the AWS documentation. Then navigate to **Target Groups** in the **EC2 Dashboard** menu to find your target group **Name**.

    <d>To configure an ALB, you must have the following AWS IAM permissions.</p>
      <pre class="terminal">
      "elasticloadbalancing:DescribeLoadBalancers",
      "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
      "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
      "elasticloadbalancing:DescribeTargetGroups",
      "elasticloadbalancing:RegisterTargets"
      </pre>
    </div>

4. Click **Save**.

## <a id='load-balancer-vm-extensions'></a> Step 11: Add VM extensions for load balancers

You must assign each of your load balancer VMs to the correct AWS target groups and security groups.
The following steps use the `om` CLI to configure both target groups and security groups. For more information, see [pivotalcf/om](https://github.com/pivotal-cf/om) in GitHub.

To assign your load balancer VMs to the correct target groups and security groups:

1. Run the following command to create a VM extension for the web VM:

    ```sh
    om -k create-vm-extension \
    --name "web-lb-security-groups" \
    --cloud-properties '{ "security_groups": ["web_lb_security_group", "vms_security_group"] }'
    ```
1. Run the following command to create a VM extension for the SSH VM:

    ```
    om -k create-vm-extension \
    --name "ssh-lb-security-groups" \
    --cloud-properties '{ "security_groups": ["ssh_lb_security_group", "vms_security_group"] }'
    ```

1. Run the following command to create a VM extension for the TCP VM:

    ```
    om -k create-vm-extension \
    --name "tcp-lb-security-groups" \
    --cloud-properties '{ "security_groups": ["tcp_lb_security_group", "vms_security_group"] }'
    ```

## <a id='custom-vm-extensions'></a> Step 12: add custom VM extensions (optional)

<%= partial "../common/vm/extension-config"  %>

## <a id='complete'></a> Step 13: Complete the BOSH Director installation

1. Click the <%= vars.ops_manager %> Installation Dashboard link to return to the Installation Dashboard.

1. Click **Review Pending Changes**, then **Apply Changes**. If the following ICMP error message appears, click **Ignore errors and start the install**.

    ![alt-text="Error messages read 'Cannot reach gateway with IP 10.0.16.1...' and 'Cannot reach DNS with IP 10.0.0.2...'."](../common/images/cloudform/install-error.png)

2. The BOSH Director installation begins. This might take a few moments. When the installation is complete, the **Changes Applied** window appears.

    ![alt-text=""](../common/images/cloudform/ops-manager-complete.png)

3. After you follow this procedure, continue to the topic for the runtime you are installing:

* **<%= vars.app_runtime_abbr %>**: [Configuring <%= vars.app_runtime_abbr %>](https://docs.pivotal.io/application-service/operating/configure-pas.html)
* **<%= vars.k8s_runtime_abbr %> v1.2**: [Installing <%= vars.k8s_runtime_abbr %> on AWS](https://docs.pivotal.io/pks/1-2/installing-pks-aws.html)
* **<%= vars.k8s_runtime_abbr %> v1.3**: [Installing <%= vars.k8s_runtime_abbr %> on AWS](https://docs.pivotal.io/pks/1-3/installing-pks-aws.html)
