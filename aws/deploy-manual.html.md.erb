---
title: Deploying Ops Manager on AWS
owner: Ops Manager
---

This topic describes how to deploy Ops Manager on Amazon Web Services (AWS).

Before you deploy Ops Manager, see the preparation steps in [Preparing to Deploy Ops Manager on AWS](prepare-env-manual.html).

After you complete this procedure, follow the instructions in [Configuring BOSH Director on AWS](config-manual.html).

## <a id='pcfaws-om-ami'></a> Step 1: Launch an Ops Manager AMI

To launch an Amazon Machine Image (AMI) for Ops Manager, do the following:

1. Navigate to the **Pivotal Operations Manager** section of [Pivotal Network](https://network.pivotal.io/products/ops-manager).

1. Select the version of Ops Manager you want to install from the **Releases** dropdown.

1. In the **Release Download Files**, click the file named **Pivotal Ops Manager for AWS** to download a PDF.

1. Open the PDF and identify the AMI ID for your region.

1. Return to the EC2 Dashboard.

1. Click **AMIs** from the **Images** menu.

1. Select **Public images** from the dropdown filter that says **Owned by me**.

1. Paste the AMI ID for your region into the search bar and press enter.
    <p class="note"><strong>Note:</strong> There is a different AMI for each region. If you cannot locate the AMI for your region, verify that you have set your AWS Management Console to your desired region. If you still cannot locate the AMI, log in to the <a href="https://network.pivotal.io">Pivotal Network</a> and file a support ticket.</p>

    <%= image_tag("../common/images/pcfaws/pcf_aws_ami.png", :alt => "Screenshot of Amazon Machine Image for Ops Manager wizard. The page has a search bar to the right of the 'Public images' dropdown.") %>

1. (Optional) If you want to encrypt the VM that runs Ops Manager with AWS Key Management Service (KMS), perform the following additional steps:
  1. Right click the row that lists your AMI and click **Copy AMI**.
  1. Select your **Destination region**.
  1. Enable **Encryption**. For more information about AMI encryption, see [Encryption and AMI Copy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html#ami-copy-encryption) from the *Copying an AMI* topic in the AWS documentation.
  1. Select your **Master Key**. To create a new custom key, see [Creating Keys](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html) in the AWS documentation.
  1. Click **Copy AMI**. You can use the new AMI you copied for the following steps.

1. Select the row that lists your Ops Manager AMI and click **Launch**.

1. Choose **m4.large** for your instance type and click **Next: Configure Instance Details**.

    <%= image_tag("../common/images/pcfaws/aws_ami_m3large.png", :alt => "Screenshot of a table. The 'Type' column is to the right of the 'Family' column. The 'm3.large' box is located under the 'Type' column.") %>

1. Configure the following for your instance:
    * **Network**: Select the VPC that you created.
    * **Subnet**: Select `pcf-public-subnet-az0` to allow traffic from public IP addresses, or `pcf-management-subnet-az0` to allow traffic only from private IP addresses.
    * **Auto-assign for Public IP**: Select **Enable** to allow traffic from public IP addresses, or **Disable** to allow traffic only from private IP addresses.
    * **IAM role**: Select the IAM role associated with your pcf-user profile. If you have not created one, click **Create new IAM role** and follow the [Guidelines for Creating User Roles on AWS](../install/aws-iaas-user-roles.html).
    * For all other fields, accept the default values.

    <%= image_tag("../common/images/pcfaws/pcf_aws_configure_instance.png", :alt => "Screenshot of AMI page titled 'Step 3: Configure Instance Details'. The page has options including: 'Number of instances' and 'IAM role'.") %>

1. Click **Next: Add Storage** and adjust the **Size (GiB)** value.
The default persistent disk value is 8&nbsp;GB. Pivotal recommends increasing this value to a minimum of 100&nbsp;GB.

    <%= image_tag("../common/images/pcfaws/pcf_aws_add_storage.png", :alt => "Screenshot of AMI page titled 'Step 4: Add Storage'. The 'Size' column is to the right of the 'Snapshot' column. The value is set to 100." ) %>

1. Click **Next: Tag Instance**.

1. On the **Add Tags** page, add a tag with the key `Name` and value `pcf-ops-manager`.

1. Click **Next: Configure Security Group**.

1. Select the `pcf-ops-manager-security-group` that you created in [Step 5: Configure a Security Group for Ops Manager](prepare-env-manual.html#pcfaws-om-secgrp) in _Preparing to Deploy Ops Manager on AWS_.

1. Click **Review and Launch** and confirm the instance launch details.

1. Click **Launch**.

1. Select the `pcf-ops-manager-key` key pair, enable the checkbox to acknowledge that you have access to the private key file, and click **Launch Instances**. You use this key pair to access the Ops Manager VM.

    <%= image_tag("../common/images/pcfaws/select_pcfpem_keypair.png", :alt => "Screenshot of the Launch dialog. The page is titled 'Select an existing key pair or create a new key pair'. The blue 'Launch Instances' button is on the bottom right.") %>

1. Click **View Instances** to access the **Instances** page on the EC2 Dashboard.


##<a id='pcfaws-web-lb'></a> Step 2: Create Web Load Balancer

1. On the EC2 Dashboard, click **Load Balancers**.

1. Click **Create Load Balancer**.

1. Under **Application Load Balancer**, click **Create**.

1. For **Step 1: Configure Load Balancer**, do the following:
  1. Under **Basic Configuration**, do the following:
      * For **Name**, enter `pcf-web-elb`.
      * For **Scheme**, select **internet-facing** to allow traffic from public IP addresses, or **internal** to allow traffic only from private IP addresses.
      * For **IP address type**, select the type of IP addresses that you want to allow.
  1. Under **Listeners**, click **Add listener**. For **Load Balancer Protocol**, select **HTTPS**.
  1. Under **Availability Zones**, select all availability zones.
  1. Click **Next: Configure Security Settings**.

1. For **Step 2: Configure Security Settings**, do the following:
  1. Under **Select default certificate**, do one of the following:
      - If you already have a certificate from AWS Certificate Manager (ACM), select **Choose a certificate from ACM**.
      - If you do not have a certificate from ACM, select **Upload a certificate to ACM**. For more information, see [Importing Certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the AWS documentation.
        <p class="note"><strong>Note:</strong> For a production or production-like environment, use a certificate from a Certificate Authority (CA). This can be an internal certificate or a purchased certificate. For a sandbox environment, you can use a self-signed certificate.</p>
  1. For **Certificate Name**, select the desired certificate.
  1. For **Security Policy**, select the policy you created in [Step 3: Create an IAM User for Ops Manager](prepare-env-manual.html#create-iam) in _Preparing to Deploy Ops Manager on AWS_.
  1. Click **Next: Configure Security Groups**.

1. For **Step 3: Configure Security Groups**, do the following:
  1. Under **Assign a security group**, select **Select an existing security group**.
  1. From the list of security groups, select the `pcf-web-elb-security-group` security group that you configured in [Step 7: Configure a Security Group for the Web ELB](prepare-env-manual.html#pcfaws-om-elbsecgrp) in _Preparing to Deploy Ops Manager on AWS_.
  1. Click **Next: Configure Routing**.

1. For **Step 4: Configure Routing**, do the following:
  1. Under **Target Group**, enter the following values:
      - **Name**: Enter `pcf-web-elb-target-group`.
      - **Target type**: Select **Instance**.
      - **Protocol**: Select **HTTP**.
      - **Port**: Enter `80`.
  1. Under **Health checks**, senter the following values:
      - **Protocol**: Select **HTTP**.
      - **Path**: Enter `/health`.
  1. Under **Advanced health check settings**, enter the following values:
      - **Port**: Select **override** and enter `8080`.
      - **Healthy threshold**: Enter `6`.
      - **Unhealthy threshold**: Enter `3`.
      - **Timeout**: Enter `3`.
      - **Interval**: Enter `5`.
      - **Success codes**: Enter `200`.
  1. Click **Next: Register Targets**.

1. For **Step 5: Register Targets**, accept the default values and click **Next: Review**.

1. For **Step 6: Review**, review the load balancer details and then click **Create**. A message appears to confirm AWS successfully created the load balancer.


## <a id='pcfaws-ssh-lb'></a> Step 3: Create SSH Load Balancer

1. From the **Load Balancers** page, click **Create Load Balancer**.

1. Select **Classic Load Balancer**.

1. Configure the load balancer with the following information:
    * **Load Balancer name**: Enter `pcf-ssh-elb`.
    * **Create LB Inside**: Select the `pcf-vpc` VPC that you created in [Step 4: Create a VPC](prepare-env-manual.html#pcfaws-vpc) in _Preparing to Deploy Ops Manager on AWS_.
    * If you want to allow traffic from public IP addresses, ensure that the **Create an internal load balancer** checkbox is not selected. If you want to allow traffic only from private IP addresses, select this checkbox.
    <%= image_tag("../common/images/pcfaws/config_elb.png", :alt => "Screenshot of the Load Balancer page titled 'Step 1: Define Load Balancer'. The page has two sections: 'Basic Configuration' and 'Select Subnets'.") %>

1. Under **Listener Configuration**, add the following rules:

    <table border="1" class="nice" >
    <tr>
      <th><strong>Load Balancer Protocol</strong></th>
      <th><strong>Load Balancer Port</strong></th>
      <th><strong>Instance Protocol</strong></th>
      <th><strong>Instance Port</strong></th>
    </tr>
    <tr>
      <td>TCP</td>
      <td>2222</td>
      <td>TCP</td>
      <td>2222</td>
    </tr>
    </table>

1. Under **Select Subnets**, select either the public or private subnets you configured in [Step 4: Create a VPC](prepare-env-manual.html#pcfaws-vpc) in _Preparing to Deploy Ops Manager on AWS_, and click **Next: Assign Security Groups**.

1. On the **Assign Security Groups** page, select the security group `pcf-ssh-elb-security-group` you configured in [Step 8: Configure a Security Group for the SSH ELB](prepare-env-manual.html#pcfaws-om-sshelbsecgrp) in _Preparing to Deploy Ops Manager on AWS_, and click **Next: Configure Security Settings**.

    <%= image_tag("../common/images/pcfaws/lb_assign_sec_groups.png", :alt => "Screenshot of the Load Balancer page titled 'Step 2: Assign Security Groups'. You can create a new security group or select an existing security group.") %>

1. On the **Configure Security Settings** page, ignore the **Improve your load balancer's security** error message and click **Next: Configure Health Check**.

1. On the **Configure Health Check** page, enter the following values:

    <%= image_tag("../common/images/pcfaws/lb_health_check.png", :alt => "Screenshot of the Load Balancer dialog. The page is titled 'Step 4: Configure Health Check'. The page has an 'Advanced Details' section.") %>

  * **Ping Protocol**: Select `TCP`.
  * **Ping Port**: Set to `2222`.
  * **Response Timeout**: Set to `3` seconds.
  * **Interval**: Set to `5` seconds.
  * **Unhealthy threshold**: Set to `3`.
  * **Health threshold**: Set to `6`.

1. Click **Next: Add EC2 Instances**.


1. Accept the defaults on the **Add EC2 Instances** page and click **Next: Add Tags**.

1. Accept the defaults on the **Add Tags** page and click **Review and Create**.

1. Review and confirm the load balancer details, and click **Create**.


## <a id='pcfaws-tcp-lb'></a> Step 4: Create TCP Load Balancer

1. From the **Load Balancers** page, click **Create Load Balancer**.

1. Select **Classic Load Balancer**.

1. Configure the load balancer with the following information:
    * **Load Balancer name**: Enter `pcf-tcp-elb`.
    * **Create LB Inside**: Select the `pcf-vpc` VPC that you created in [Step 4: Create a VPC](prepare-env-manual.html#pcfaws-vpc) in _Preparing to Deploy Ops Manager on AWS_.
    * If you want to allow traffic from public IP addresses, ensure that the **Create an internal load balancer** checkbox is not selected. If you want to allow traffic only from private IP addresses, select this checkbox.

    <%= image_tag("../common/images/pcfaws/config_elb.png") %>

1. Under **Listener Configuration**, add the following rules:

    <table border="1" class="nice" >
    <tr>
      <th><strong>Load Balancer Protocol</strong></th>
      <th><strong>Load Balancer Port</strong></th>
      <th><strong>Instance Protocol</strong></th>
      <th><strong>Instance Port</strong></th>
    </tr>
    <tr>
      <td>TCP</td>
      <td>1024</td>
      <td>TCP</td>
      <td>1024</td>
    </tr>
    <tr>
      <td>TCP</td>
      <td>1025</td>
      <td>TCP</td>
      <td>1025</td>
    </tr>
    <tr>
      <td>TCP</td>
      <td>1026</td>
      <td>TCP</td>
      <td>1026</td>
    </tr>
    <tr>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <td>TCP</td>
      <td>1123</td>
      <td>TCP</td>
      <td>1123</td>
    </tr>
    </table>

      <br>
      The `...` entry above indicates that you must add listening rules for each port between 1026 and 1123.

1. Under **Select Subnets**, select either the public or private subnets you configured in [Step 4: Create a VPC](prepare-env-manual.html#pcfaws-vpc) in _Preparing to Deploy Ops Manager on AWS_, and click **Next: Assign Security Groups**.

1. On the **Assign Security Groups** page, select the security group `pcf-tcp-elb-security-group` you configured in [Step 9: Configure a Security Group for the TCP ELB](prepare-env-manual.html#pcfaws-om-tcpelbsecgrp) in _Preparing to Deploy Ops Manager on AWS_, and click **Next: Configure Security Settings**.

    <%= image_tag("../common/images/pcfaws/lb_assign_sec_groups.png") %>

1. On the **Configure Security Settings** page, ignore the **Improve you load balancer's security** error message and click **Next: Configure Health Check**.

1. On the **Configure Health Check** page, enter the following values:

    <%= image_tag("../common/images/pcfaws/lb_health_check.png", :alt => "Screenshot of the Load Balancer dialog. THe page is titled 'Step 4: Configure Health Check'. The page has an 'Advanced Details' section.") %>

  * **Ping Protocol**: Select `TCP`.
  * **Ping Port**: Set to `80`.
  * **Response Timeout**: Set to `3` seconds.
  * **Interval**: Set to `5` seconds.
  * **Unhealthy threshold**: Set to `3`.
  * **Health threshold**: Set to `6`.

1. Click **Next: Add EC2 Instances**.

1. Accept the defaults on the **Add EC2 Instances** page and click **Next: Add Tags**.

1. Accept the defaults on the **Add Tags** page and click **Review and Create**.

1. Review and confirm the load balancer details, and click **Create**.


## <a id='pcfaws-dns'></a> Step 5: Configure DNS Records

1. Perform the following steps for all three of the load balancers you created in previous steps, named `pcf-web-elb`, `pcf-ssh-elb`, and `pcf-tcp-elb`:
  1. From the **Load Balancers** page, select the load balancer.
  1. On the **Description** tab, locate the **Basic Configuration** section and record the **DNS name** of the load balancer.

1. Click **Instances** on the left navigation to view your EC2 instances.

1. Select the `PcfOpsManInstance` instance created by Cloudformation.

1. On the **Description** tab, record the value for **IPv4 Public IP**.

1. Navigate to your DNS provider and create the following CNAME and A records:
  * CNAME: `*.apps.DOMAIN.com` and `*.system.DOMAIN.com` points to the DNS name of the `pcf-web-elb` load balancer.
  * CNAME: `ssh.DOMAIN.com` points to the DNS name of the `pcf-ssh-elb` load balancer.
  * CNAME: `tcp.DOMAIN.com` points to the DNS name of the `pcf-tcp-elb` load balancer.
  * A: `pcf.DOMAIN.com` points to the public IP address of the `pcf-ops-manager` EC2 instance.
  </br>
  </br>
  Where `DOMAIN` is a domain name. <%= vars.company_name %> recommends that you use the same domain name for each record.


## <a id='pcfaws-nat'></a> Step 6: Secure the NAT Instance

1. On the EC2 Dashboard, click **Instances**.

1. Select the NAT instance, which has an instance type of **t3.medium**.

1. From the **Actions** menu, select **Networking>Change Security Groups**.

1. Change the NAT security group from the default group to the `pcf-nat-security-group` NAT security group that you created in [Step 10: Configure a Security Group for the Outbound NAT](prepare-env-manual.html#pcfaws-om-natsecgrp) in _Preparing to Deploy Ops Manager on AWS_.
    <%= image_tag("../common/images/pcfaws/pcf_aws_select_security_group.png", :alt => "Screenshot of the E2C Dashboard. The page is titled 'Change Security Groups'. The page has three sections: 'Security GroupID', 'Name', and 'Description'.") %>

1. Click **Assign Security Groups**.


## <a id='pcfaws-rds-subnet-group'></a> Step 7: Create RDS Subnet Group

1. Navigate to the RDS Dashboard.

1. Perform the following steps to create a RDS Subnet Group for the two RDS subnets:
    1. Click **Subnet Groups>Create DB Subnet Group**.
    1. Enter the following values:
        * **Name**: Enter `pcf-rds-subnet-group`.
        * **Description**: Enter a description to identify this subnet group.
        * **VPC ID**: Select `pcf-vpc`.
        * **Availability Zone** and **Subnet ID**: Choose the AZ and subnet for `pcf-rds-subnet-az0` and click **Add**.
    1. Repeat the steps above to add `pcf-rds-subnet-az1` and `pcf-rds-subnet-az2` to the group.
    1. Click **Create**.

    The following screenshot shows a completed subnet group.

    <%= image_tag("../common/images/pcfaws/rds_pcf_subnet_group.png", :alt => "Screenshot of the RDS dashboard. The page is titled 'Create DB Subnet Group'. The screenshot shows a completed subnet group.") %>

    <p class="note"><strong>Note:</strong> On the Subnet Group page, you may need to refresh the page to view the new group.</p>


## <a id='pcfaws-mysql-rds'></a> Step 8: Create a MySQL Database Using AWS RDS

<p class="note"><strong>Note:</strong> You must have an empty MySQL database when you install or reinstall Ops Manager on AWS.</p>

1. Navigate to the RDS Dashboard.

1. Click **Instances>Launch DB Instance** to launch the wizard.

1. Select **MySQL**.

1. Select the **MySQL** radio button under **Production** to create a database for production environments.

1. Click **Next Step**.

1. Specify the following database details:
    * **DB Instance Class**: Select **db.m3.large - 2 vCPU, 7.5 GiB RAM**.
    * **Multi-AZ Deployment**: Select **Yes**.
    * **Storage Type**: Select `Provisioned IOPS (SSD)`.
    * **Allocated Storage**: Enter **100&nbsp;GB**.
    * **DB Instance Identifier**: Enter `pcf-ops-manager-director`.
    * Enter a secure **Master Username** and **Master Password**.
          <p class="note"><strong>Note:</strong> Record the username and password. You need these credentials later when configuring the <strong>Director Config</strong> page in the BOSH Director tile.</p>
  <%= image_tag("../common/images/pcfaws/db_details.png", :alt => "Screenshot of the RDS dashboard. The page is titled 'Specify DB Details'. The screenshot shows example completed database details.") %>

1. Click **Next Step**.

1. On the **Configure Advanced Settings** page, enter the following values:
    * **VPC**: Select `pcf-vpc`.
    * **Subnet Group**: Select the `pcf-rds-subnet-group` you created in [Step 7: Create RDS Subnet Group](#pcfaws-rds-subnet-group).
    * **Publicly Accessible**: Select **No**.
    * **VPC Security Groups**: Select the `pcf-mysql-security-group` that you created in [Step 11: Configure a Security Group for MySQL](prepare-env-manual.html#pcfaws-om-mysqlsecgrp) in _Preparing to Deploy Ops Manager on AWS_.
    * **Initial Database Name**: Enter `bosh`.
    * Accept the default values for the remaining fields.

	<%= image_tag("../common/images/pcfaws/advanced_db_settings.png", :alt => "Screenshot of the RDS dashboard. The page is titled 'Configure Advanced Settings'. The screenshot shows the completed example values.") %>

1. Click **Launch DB Instance**. Launching the instance may take several minutes.

## <a id="next"></a>Next Steps

When the instance has launched, you can do either of the following:

- Review [Required AWS Objects](required-objects.html) to verify that you created the correct resources in AWS.
- Proceed to [Configuring BOSH Director on AWS](config-manual.html) to continue deploying Ops Manager.
