---
title: Managing verifiers in your Tanzu Operations Manager deployment
owner: Ops Manager
---

You can deactivate and reactivate verifiers for fields in the BOSH Director and
other <%= vars.ops_manager_first %> product tiles.

<%= vars.ops_manager %> provides this option for troubleshooting
purposes. For example, your deployment may have a unique configuration that the
verifier cannot detect. In this case, you can unblock your deployment by disabling the verifier.

<p> <%= vars.company_name %> recommends contacting Support before you
deactivate <%= vars.ops_manager %> verifiers.</p>

<p class="note caution">
<span class="note__title">Caution</span>
<%= vars.company_name %> recommends recording
and routinely revisiting which verifiers you deactivate.
The <%= vars.ops_manager %> UI does not indicate which verifiers you deactivated. Deactivated
verifiers persist through upgrades.</p>

## <a id='about-verifiers'></a> About verifiers

<%= vars.ops_manager %> verifiers narrow the feedback loop for operators by checking that fields are
configured correctly. <%= vars.ops_manager %> verifiers reach out and find objects in the world. For example, given an IP, a
verifier can ping the IP to see that it responds.

Verifiers run early in a deployment. With verifiers turned off,
deployments might fail much later.

Verifiers run on two occasions:

<table class=“table”>
<thead>
  <tr>
    <th>Verifier Label</th>
    <th>Triggers when you...</th>
    <th>Blocks deployment?</th>
  </tr>
</thead>
  <tr>
    <td><code>form</code></td>
    <td>Click <strong>Save</strong> in a pane.</td>
    <td>Does not block deployment. Error message is a warning.</td>
  </tr>
  <tr>
    <td><code>install_time</code></td>
    <td>Click <strong>Apply Changes</strong>.</td>
    <td>Blocks you from deploying. Disabling verifiers unblocks deployment.</td>
  </tr>
</table>

## <a id='disable'></a> Deactivate verifiers by type

You can deactivate verifiers by verifier type. For example, you can deactivate all MySQL
verifiers for a tile. To deactivate a verifier type for a tile, you
must find and record the type, then use the <%= vars.ops_manager %> API.

### <a id='record-type'></a> Step 1: Record the verifier type

To record the verifier type:

1. Log in to <%= vars.ops_manager %> and go to **Review Pending Changes**.

1. Click **Apply Changes** and see the verifier error message.

1. Record the `type` in the verifier error message. For example, `WildcardDomainVerifier`.

### <a id='api-put'></a> Step 2: Use the <%= vars.ops_manager %> API

To deactivate verifiers, you must use the <%= vars.ops_manager %> API. To get started with
the <%= vars.ops_manager %> API, follow the procedures in [Using the <%= vars.ops_manager %> API](ops-man-api.html).

The API endpoint varies by tile. Go to one of the following procedures:

- [Deactivate Verifiers for the Bosh Director tile](#bosh-director-disable)

- [Deactivate Verifiers for other tiles](#tile-disable)

#### <a id='bosh-director-disable'></a> Deactivate verifiers for the BOSH Director tile

To deactivate a verifier type for the BOSH Director:

1. Run the following API command:

    ```
    curl "https://OPS-MAN-FQDN/api/v0/staged/director/verifiers/install_time/VERIFER-TYPE" \
     -X PUT \
     -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
     -H "Content-Type: application/json" \
     -d '{ "enabled": false }'
     ```

    Where:

    - `OPS-MAN-FQDN` is the fully-qualified domain name (FQDN) for your <%= vars.ops_manager %> deployment.
    - `VERIFIER-TYPE` is the verifier type you recorded in [Step 1: Record the Verifier Type](#verifier-type).
    - `UAA_ACCESS_TOKEN` is your UAA access token. For more information, see [Access the
    API](ops-man-api.html#access-api).

    For more information about this endpoint, see [Endpoints](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-ops-man-api.html)
    in the <%= vars.ops_manager %> API documentation.

1. To confirm your verifier type is deactivated, run the following command:

    ```
    curl "https://OPS-MAN-FQDN/api/v0/staged/director/verifiers/install_time" \
     -X GET \
     -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```

    See that the <%= vars.ops_manager %> API shows `false` for the verifier type you deactivated. In
    the following example, `DirectorConfigurationVerifer` is set to `false`:

    ```
    {
      "verifiers": [
        {
          "type": "AllocatedIpAddressVerifier",
          "enabled": true
        },
        {
          "type": "AvailabilityZonesVerifier",
          "enabled": true
        },
        {
          "type": "DirectorConfigurationVerifier",
          "enabled": false
        },
        {
          "type": "IaasConfigurationVerifier",
          "enabled": true
        },
        {
          "type": "NetworksExistenceVerifier",
          "enabled": true
        },
        {
          "type": "NetworksPingableVerifier",
          "enabled": true
        },
        {
          "type": "PrivilegeVerifier",
          "enabled": true
        }]}
    ```

    For more information about this endpoint, see [Retrieving a list of install time
    verifiers for a specific
    product](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-ops-man-api.html)
    in the <%= vars.ops_manager %> API documentation.

1. Record the product and the verifier type that you deactivated in a secure location.
<%= vars.company_name %> recommends recording and routinely revisiting which verifiers you deactivate.


#### <a id='tile-disable'></a> Deactivate verifiers for other tiles

To deactivate a verifier type for tiles other than the BOSH Director:

1. Run the following command and record the `guid` corresponding to your product.

    ```
    curl "https://OPS-MAN-FQDN/api/v0/staged/products" \
    -X GET \
    -H "Authorization: Bearer UAA_ACCESS_TOKEN"
    ```

    Where:

    - `OPS-MAN-FQDN` is the fully-qualified domain name (FQDN) for your <%= vars.ops_manager %> deployment.
    - `UAA_ACCESS_TOKEN` is your UAA access token. For more information, see [Access the
    API](ops-man-api.html#access-api).

    See the following example output:

    <pre class="terminal">
    {[{
      "installation_name": "component-type1-installation-name",
      "guid": "component-type1-guid",
      "type": "component-type1"
    },
    {
      "installation_name": "p-bosh-installation-name",
      "guid": "p-bosh-guid",
      "type": "p-bosh"
    }]}
    </pre>


1. To deactivate your verifier by type, run the following command.

    ```
    curl "https://OPS-MAN-FQDN/api/v0/staged/products/PRODUCT-GUID/verifiers/install_time/VERIFIER-TYPE" \
    -X PUT \
    -H "Authorization: Bearer UAA_ACCESS_TOKEN" \
    -H "Content-Type: application/json" \
    -d '{ "enabled": false }'
    ```

    Where:

    - `OPS-MAN-FQDN` is the fully-qualified domain name (FQDN) for your <%= vars.ops_manager %> deployment.
    - `PRODUCT-GUID` is the GUID you recorded in the previous step.
    - `VERIFIER-TYPE` is the verifier type you recorded in [Step 1: Record the Verifier type](#verifier-type).


1. To confirm your verifier type is deactivated, run the following command.

    ```
    curl "https://OPS-MAN-FQDN/api/v0/staged/products/PRODUCT-GUID/verifiers/install_time" \
    -X GET \
    -H "Authorization: Bearer UAA_ACCESS_TOKEN"
    ```

    See that the <%= vars.ops_manager %> API shows `false` for the verifier type you deactivated. In
    the following example, `MysqlDatabaseVerifier` is set to `false`:

    <pre class="terminal">
    {
      "verifiers":[
      {
      "type":"BlobstoreVerifier",
      "enabled":true
    },
    {
      "type":"MysqlDatabaseVerifier",
      "enabled":false
    },
    {
      "type":"SsoUrlVerifier",
      "enabled":true
    },
    {
      "type":"WildcardDomainVerifier",
      "enabled":true
    }]}
    </pre>


1. Record the product and the verifier type that you deactivated in a secure location.
<%= vars.company_name %> recommends recording and routinely revisiting which verifiers you deactivate.

## <a id='re-enable'></a> Re-enable verifiers by type

<%= vars.company_name %> recommends recording and routinely revisiting which verifiers you deactivate.
The <%= vars.ops_manager %> UI does not indicate which verifiers you deactivate. Deactivated verifiers
persist through upgrades.

To enable verifiers again, follow the steps detailed in [Use the <%= vars.ops_manager %> API](#api-put). Instead of setting `enabled` to `false`, set it to `true`.

If you do not know what verifiers are deactivated, `curl` the `verifiers` endpoint for each
installed product.
