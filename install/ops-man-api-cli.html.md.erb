---
title: Using Tanzu Operations Manager programmatically and from the command line
owner: Ops Manager
---

You can do <%= vars.ops_manager_first %> operations programmatically and from the command line, rather than
  from the <%= vars.ops_manager %> UI.

<%= vars.ops_manager %> includes three related tools for performing operations programmatically and from the command line, rather than from the UI:

* The <%= vars.ops_manager %> API. For more information,
see the [<%= vars.ops_manager %> API](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-ops-man-api.html) documentation.

* The `om` command-line interface (CLI).  For more information about `om`,
see the [`om` repository](https://github.com/pivotal-cf/om).

* Platform Automation tasks. For more information,
see the [Platform Automation](https://docs.vmware.com/en/Concourse-for-VMware-Tanzu/7.0/vmware-tanzu-concourse/GUID-installation-install-platform-automation.html).

These three tools control the <%= vars.ops_manager %> VM at different levels of abstraction. For more information about tile development, see
the [<%= vars.ops_manager %> Tile Developer Guide](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/tile-dev-guide/index.html).

## <a id='api'></a> The <%= vars.ops_manager %> API

The <%= vars.ops_manager %> API offers the most granular control of the <%= vars.ops_manager %> VM, The API enables users to do the following:

* Automate component-level testing of <%= vars.ops_manager %> product tiles

* Manage <%= vars.ops_manager %> user accounts

* Develop and debug product tiles

* Access product property values that are not exposed in a product tile GUI

* Otherwise control the <%= vars.ops_manager %> VM directly, programmatically or manually, bypassing the <%= vars.ops_manager %> UI. For more information about the <%= vars.ops_manager %> interface, see [Using the <%= vars.ops_manager %> interface](../pcf-interface.html)

For information about getting started with the <%= vars.ops_manager %> API, see [Access the <%= vars.ops_manager %> API](ops-man-api.html#access) in _Using the <%= vars.ops_manager %> API_.

Your <%= vars.ops_manager %> serves a local copy of the complete <%= vars.ops_manager %> API documentation at `https://YOUR-OPS-MANAGER-FQDN/docs`.

## <a id='om'></a> The <%= vars.ops_manager %> CLI (om)

The <%= vars.ops_manager %> CLI, `om`, calls the <%= vars.ops_manager %> API to do the following:

- Perform <%= vars.ops_manager %> operations from the command line or scripts
- Manage credentials from the command line or scripts
- Generate configuration files from, and apply saved configurations to, staged product tiles.

For information, including how to install `om` and a usage example, see [Using the <%= vars.ops_manager %> CLI](cli.html).

## <a id='platform-automation'></a> Platform Automation (beta)

Platform Automation tasks call the `om` CLI to do the following:

- Serve as building blocks for Continuous Integration (CI) pipelines that automate installation and updating of <%= vars.ops_manager %> foundations
- Within pipelines, store and retrieve product configuration values from secrets vaults like CredHub and code repositories like GitHub.

For a complete list of Platform Automation tasks,
see [Concourse Tasks](https://docs.vmware.com/en/Concourse-for-VMware-Tanzu/7.0/vmware-tanzu-concourse/GUID-installation-install-platform-automation.html) in the Platform Automation documentation.

## <a id='example-ops'></a> Examples of equivalent operations

The following table lists some common operations using the <%= vars.ops_manager %> UI, <%= vars.ops_manager %> API, `om` CLI, and Platform Automation tasks, as examples of how
different <%= vars.ops_manager %> interfaces relate to one another.

For complete lists of operations, consult the references in the previous sections.

<table class=“table”>
<thead>
  <tr>
    <th>UI action</th>
    <th>API command</th>
    <th><code>om</code> Command</th>
    <th>Platform automation (Beta) task</th>
  </tr>
</thead>
  <tr>
    <td>Manually configure the BOSH Director tile</td>
    <td>Multiple commands; see <a href="./ops-man-api.html#configure-bosh">Configure the BOSH Director</a> in <em>Using the <%= vars.ops_manager %> API</em>.</td>
    <td><code>om configure-director</code></td>
    <td><code>configure-director</code></td>
  </tr><tr>
    <td>Click <strong>IMPORT A PRODUCT</strong></td>
    <td><code>POST</code> product file to <code>/available_products</code></td>
    <td><code>om upload-product</code></td>
    <td><code>upload-product</code></td>
  </tr><tr>
    <td>Click the <strong>+</strong> symbol next to a product listing left of <strong>Installation Dashboard</strong></td>
    <td><code>POST</code> product name and version to <code>/staged/products</code></td>
    <td><code>om stage-product</code></td>
    <td><code>stage-product</code></td>
  </tr><tr>
    <td>Manually configure a product tile</td>
    <td>Multiple commands; see <a href="./ops-man-api.html#configure-product">Configure a Product</a> in <em>Using the <%= vars.ops_manager %> API</em>.</td>
    <td><code>om configure-product</code></td>
    <td><code>configure-product</code></td>  </tr><tr>
    <td>Click <strong>STEMCELL LIBRARY</strong>, then <strong>IMPORT STEMCELL</strong></td>
    <td><code>POST</code> stemcell file to <code>/stemcells</code></td>
    <td><code>om upload-stemcell</code></td>
    <td><code>upload-stemcell</code></td>
  </tr><tr>
    <td>Click <strong>Apply Changes</strong></td>
    <td><code>POST</code> specified products (or <code>all</code>) and errand lists to <code>/installations</code></td>
    <td><code>om apply-changes</code></td>
    <td><code>apply-changes</code></td>
  </tr>
</table>
