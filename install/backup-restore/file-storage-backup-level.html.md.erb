---
title: Ops Manager file storage backup levels
owner: RelEng
---

You can configure <%= vars.app_runtime_first %> file storage backups to include all files, exclude droplets, or exclude droplets and packages. For information about configuring the <%= vars.app_runtime_abbr %> blobstore to exclude droplets or to exclude droplets and packages, see the [<%= vars.app_runtime_abbr %> documentation](https://docs.pivotal.io/application-service/operating/configure-pas.html#file-storage).

## <a id='file-storage-motivation'></a> Considerations for configuring file storage backups

When considering configuration for your use case, the two main factors are backup artifact size and Recovery Time Objective (RTO).

If you want a smaller backup artifact, you can exclude certain blobs from the backup. This can enable you to take more frequent backups without using a large amount of storage space and causes shorter periods of app downtime. However, you will have to re-push or restage all apps, which results in a higher RTO.

If you want a lower RTO, you can do a complete file storage backup. However, this results in a larger backup artifact size.

The following table gives approximate values for the proportion of the blobstore used by each object:

| Name | Portion of blobstore |
| ---- | -------------------- |
| Buildpacks | 0&ndash;5% |
| Packages | 5&ndash;25% |
| Droplets | 70&ndash;80% |

### <a id='complete-file-storage'></a> Complete file storage backup

A complete file storage backup contains the complete blobstore, including droplets, packages, and buildpacks. This is the default behavior. This backup is the largest and slowest but has the lowest RTO.

When restoring from this backup, apps automatically return in a running state because <%= vars.app_runtime_abbr %> is restored with the expected droplets and can reschedule the apps without any manual intervention.

### <a id='exclude-droplets-file-storage'></a> File storage backups excluding droplets

If you configure <%= vars.app_runtime_abbr %> to exclude droplets from the file storage backups, the backup is a smaller and faster, but has an increased RTO.

When restoring from this backup, apps return in a stopped state because the foundation does not have their corresponding droplets. Developers must restage each app to return them to a running state. <%= vars.app_runtime_abbr %> must recompile the droplet using the packages in the backup then deploy the new droplet. This process increases the RTO.

For more information about configuring the <%= vars.app_runtime_abbr %> blobstore to exclude droplets, see [Configure File Storage](https://docs.pivotal.io/application-service/operating/configure-pas.html#file-storage) in _Configuring <%= vars.app_runtime_abbr %>_.

### <a id='exclude-droplets-packages-file-storage'></a> File storage backups excluding droplets and packages

If you configure <%= vars.app_runtime_abbr %> to exclude droplets and packages from the file storage backup, the backup is smaller and faster than the other two options, but with an even greater RTO.

When restoring from this backup, apps return in a stopped state because the foundation does not have their corresponding droplets or packages. Developers must re-push each app to return them to a running state. This uploads the app packages, compiles them, and deploys a new droplet. This process increases the RTO.

For more information about to configuring the <%= vars.app_runtime_abbr %> blobstore to exclude droplets and packages, see [Configure File Storage](https://docs.pivotal.io/application-service/operating/configure-pas.html#file-storage) in _Configuring <%= vars.app_runtime_abbr %>_.
