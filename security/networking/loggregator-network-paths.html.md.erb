---
title: Loggregator Network Communications
owner: Loggregator
---

This topic describes Loggregator internal network communication paths with other <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) components.

For more information about Loggregator components and architecture, see [Loggregator Components and Architecture](https://docs.pivotal.io/application-service/loggregator/architecture.html).


## <a id="loggregator"></a> Loggregator Communications

The following table lists network communication paths for Loggregator:

| Source VM | Destination VM | Port | Transport Layer Protocol | App Layer Protocol | Security and Authentication |
| --------- | -------------- | ---- | ------------------------ | ------------------ | ---------------------------- |
| Any&#42; | loggregator_trafficcontroller | 8081 | TCP | HTTP/WebSocket | OAuth |
| Any VM running Loggregator Agent | doppler | 8082 | TCP | gRPC over HTTP/2 | Mutual TLS |
| loggregator_trafficcontroller | doppler | 8082 | TCP | gRPC over HTTP/2 | Mutual TLS |
| loggregator_trafficcontroller | uaa | 8443 | TCP | HTTPS | TLS |
| loggregator_trafficcontroller | cloud_controller | 9023 | TCP | HTTPS | Mutual TLS |
| loggregator_trafficcontroller (Reverse Log Proxy) | doppler | 8082 | TCP | gRPC over HTTP/2 | Mutual TLS |
| loggregator_trafficcontroller (Route Registrar) | nats | 4222 | TCP | NATS | Basic authentication |
| loggregator_trafficcontroller (Metrics Forwarder) | BOSH Director (Metrics Server) | 25555 and 8443 | TCP | gRPC over HTTP/2 | Mutual TLS |
| loggregator_trafficcontroller | log_cache | 8080 | TCP | gRPC over HTTP/2 | Mutual TLS |
| loggregator_trafficcontroller (Reverse Log Proxy Gateway) | cloud_controller | 9023 | TCP | HTTPS | Mutual TLS |
| Any&#42; | loggregator_trafficcontroller (Reverse Log Proxy Gateway) | 8088 | TCP | HTTP/Server Sent Events | OAuth |

<sup>&#42;</sup>Any source VM can send requests to the specified destination within its subnet.

<sup>&#42;&#42;</sup>Any host configured through a user-provided service binding with a syslog URL.

<sup>&#42;&#42;&#42;</sup>Any port configured through a user-provided service binding with syslog URL.

<sup>&#42;&#42;&#42;&#42;</sup>Basic authentication only supported for HTTPS syslog drains.


## <a id="log-cache"></a> Log Cache Communications

The following table lists network communication paths for Log Cache:

| Source VM | Destination VM | Port | Transport Layer Protocol | App Layer Protocol | Security and Authentication |
| --------- | -------------- | ---- | ------------------------ | ------------------ | ---------------------------- |
| Any VM running Loggregator Syslog Agent&#42; | log_cache | 6667 | TCP | Syslog | TLS |
| Any&#42;&#42; | log_cache | 8080 | TCP | gRPC over HTTP/2 | Mutual TLS |
| log_cache (Nozzle)&#42;&#42;&#42; | loggregator_trafficcontroller (Reverse Log Proxy) | 8082 | TCP | gRPC over HTTP/2 | Mutual TLS |
| gorouter | log_cache (Auth Proxy) | 8083 | TCP | HTTP | OAuth |
| log_cache (Auth Proxy) | uaa | 8443 | TCP | HTTPS | TLS |
| log_cache (Auth Proxy) | cloud_controller | 9024 | TCP | HTTPS | TLS |

<sup>&#42;</sup>When Log Cache is configured to use Syslog ingestion.
<sup>&#42;&#42;</sup>Any source VM can send requests to the specified destination within its subnet.
<sup>&#42;&#42;&#42;</sup>When Log Cache is configured to use Reverse Log Proxy ingestion.

<%= partial "bosh-dns" %>
